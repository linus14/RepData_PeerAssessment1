?transform
library(ggplot2movies)
install.packges("ggplot2movies")
install.packages("ggplot2movies")
library(ggplot2movies)
<-ggplot(movies, aes(votes, rating))
g<-ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel=panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?llines
install.packages("RColorBrewer")
library(RColorBrewer)
library(swirl)
swirl()
dist(dataFrame)
hc<-hclust(distxy)
hc
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
plot(hc)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y, cx,cy)
apply(distTmp, 2, which.min)
points(x, y, pch=3, cex=2, col=cols1[newClust])
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newclust, mean)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols, pch=8, cex=2, lwd=2)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2,2,which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y, col=kmObj$cluster, pch = 19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch = 19, cex=2)
q()
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(sacle(mat))
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1]*svd1$d[1])%*%t(svd2$v[,1])
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myImage(a1)
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
install.packages("kernlab")
library(kernlab)
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
ssd$activity
table(ssd$activity)
sub1 <- subset(ssd, subject=1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(ssd[,1:12])
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
dist(sub1[,1:3])
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon))
c(sub1[,10:12], maxCon)
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.com=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], 6)
table(kclust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kclust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab = "Walkdown Cluster")
library(slidify)
install.packages("slidify")
install.packages("markdown")
install.packages("knitr")
install.packages("slidifyLibraries")
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
install.packages("xtable")
library(xtable)
1.75e9*1.5
1.75e9*1.5/10e6
1.75e9*1.5/10e6*3
787.5/10
1.8e9*1.7/10e6*3
1.8e9*1.6
932e6*2.5
932e6*2.5/10e6*1.5
932e6*1.5/10e6*1.5
932e6*1.5
932e6*1.5/10e6*1.5
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <-strsplit(canmes, |, fixed=TRUE)
cnames <-strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <-make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
pm1$Date <- as.date(pm1$Date)
pm1$Date <- as.dates(pm1$Date)
?as.date
??as.date
pm1$Date <- as.Date(pm1$Date)
head(pm1)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], month)
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <-intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code ==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code ==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <-subset(cnt0, County.Code==63, Site.ID==2008)
pm0sub <-subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <-subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, xsub0, pch=20)
plot(dates0, x0sub, pch=20)
abline(median(x0sub, na.rm=TRUE), lwd=2)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0), mean=mn0)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
7*5e6/280e6
8*5e6/280e6
old.packages()
update.packages()
old.packages()
install.packages("ggplot2")
old.packages()
setwd("RResearch")
getwd()
dir()
setwd("RepData_PeerAssessment1")
dir()
df1 <- read.csv("activity.csv")#
df1$date <- as.Date(df1$date, "%Y-%m-%d")
tSteps <- with(df1, tapply(steps, date, sum, na.rm=TRUE))
meanSteps <- mean(tSteps, na.rm=TRUE)#
medSteps <- median(tSteps, na.rm=TRUE)#
print(paste("The mean total number of steps per day is", meanSteps))#
print(paste("The median total number of steps per day is", medSteps))
